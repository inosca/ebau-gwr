name: Tests

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  schedule:
    - cron: "0 0 * * 0"

concurrency:
  group: tests-${{ github.ref }}
  cancel-in-progress: true

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: Install poetry
        run: pipx install poetry

      - name: Setup python
        uses: actions/setup-python@v6
        with:
          python-version: "3.12"
          cache: "poetry"

      - name: Install dependencies
        run: poetry install

      - name: Run gitlint
        run: poetry run gitlint --contrib contrib-title-conventional-commits

      - name: Run ruff
        run: poetry run ruff check .

      - name: Run ruff format
        run: poetry run ruff format --check .

  docker-tests:
    name: Docker tests
    runs-on: ubuntu-latest
    needs: [lint]

    steps:
      - uses: actions/checkout@v5

      - name: Set UID
        run: echo "UID=$(id --user)" > .env

      - name: Build the containers
        run: make build

      - name: Lint the code
        run: make lint

      - name: Run test suite
        run: make test

  compatibility-tests:
    name: Compatibility tests
    runs-on: ubuntu-latest
    needs: [lint]

    env:
      ENV: dev

    strategy:
      matrix:
        python_version:
          - "3.12"
          - "3.13"

    services:
      postgres:
        image: postgres
        env:
          POSTGRES_USER: ebau-gwr
          POSTGRES_PASSWORD: ebau-gwr
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
      - uses: actions/checkout@v5

      - name: Install poetry
        run: pipx install poetry

      - name: Setup python
        uses: actions/setup-python@v6
        with:
          python-version: ${{ matrix.python_version }}
          cache: "poetry"

      - name: Set UID
        run: echo "UID=$(id --user)" > .env

      - name: Install dependencies
        run: poetry install

      - name: Run tests
        run: poetry run pytest --no-cov-on-fail --cov --create-db -vv
